---
export interface Props {
  src: string;
  alt: string;
  width: number;
  height: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  fetchpriority?: 'high' | 'low' | 'auto';
  decoding?: 'sync' | 'async' | 'auto';
}

const { src, alt, width, height, class: className = '', loading = 'lazy', fetchpriority = 'auto', decoding = 'async' } = Astro.props;

const aspectRatio = (height / width) * 100;

const srcset = `${src} ${width}w, ${src} ${width * 2}w`;

const sizes = `(max-width: 640px) 100vw, (max-width: 1024px) 50vw, ${width}px`;
---

<div class={`relative overflow-hidden ${className}`} style={`aspect-ratio: ${aspectRatio}%`}>
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    loading={loading}
    fetchpriority={fetchpriority}
    decoding={decoding}
    class="w-full h-full object-cover"
    srcset={srcset}
    sizes={sizes}
  />
</div>

<style>
  img {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
  }

  .relative {
    position: relative;
  }

  div[style*="aspect-ratio"] {
    position: relative;
    width: 100%;
  }

  div[style*="aspect-ratio"]::before {
    content: "";
    display: block;
    padding-bottom: var(--aspect-ratio);
  }

  div[style*="aspect-ratio"] > img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
</style>
